<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>语音配置</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <script type="text/javascript" src="../js/LAB.min.js"></script>
    <style type="text/css">
        body {
            display: none;
        }
    </style>
    <script type="text/javascript">
        $LAB
        .script("../js/launch.js?version=" + new Date().getTime()).wait(function () {
            init(function () {
                function isNotUndefinedOrNull(value) {
                    return (value != undefined && value != null);
                }

                function voive_json_ajax(req, callback) {
                    $.ajax({
                        type: "POST",
                        url: "../voicecfg.php",
                        data: JSON.stringify(req),
                        success: function (data) {
                            if (precheck(data)) return false;
                            callback(data);
                        },
                        dataType: "text"
                    });
                }
                var offlinevoicecfg = new function () {
                    var input_data = null;
                    var output_data = null;
                    //获取语音规则配置
                    function get_offline_voice_cfg() {
                        var cfg = {};
                        cfg.type = "get_offline_voice_cfg";
                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state != 200) {
                                return;
                            }
                            input_data = json_data.input;
                            //input
                            if (isNotUndefinedOrNull(json_data.input)) {
                                var data = json_data.input;
                                for (var i in data) {
                                    $("select[vzfilter='input'][datatype=" + i + "]").select_val(data[i]);
                                }
                            }
                            output_data = json_data.output;
                            //output
                            if (isNotUndefinedOrNull(json_data.output)) {
                                var data = json_data.output;
                                for (var i in data) {
                                    $("select[vzfilter='output'][datatype=" + i + "]").select_val(data[i]);
                                }
                            }
                        });
                    }
                    //设置语音规则配置
                    function set_offline_voice_cfg() {
                        var cfg = {};
                        cfg.type = "set_offline_voice_cfg";

                        var input = {};
                        $("select[vzfilter='input']").each(function () {
                            var type = $(this).attr("datatype");
                            input[type] = $(this).select_val();
                        });
                        cfg.input = input;

                        var output = {};
                        $("select[vzfilter='output']").each(function () {
                            var type = $(this).attr("datatype");
                            output[type] = $(this).select_val();
                        });
                        cfg.output = output;

                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state == 200) {
                                show_informer();
                                get_offline_voice_cfg();
                                get_voice_strategy_cfg();
                            }
                        });
                    }
                    //获取语音策略
                    function get_voice_strategy_cfg() {
                        var cfg = {};
                        cfg.type = "get_voice_strategy_cfg";
                        $.ajax({
                            type: "POST",
                            url: "../voicecfg.php",
                            data: JSON.stringify(cfg),
                            success: function (ajaxdata) {
                                if (precheck(ajaxdata)) {
                                    return false;
                                }
                                if (ajaxdata.substr(0, 2) != "OK") {
                                    return;
                                }
                                ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                                var json_data = eval("(" + ajaxdata + ")");
                                if (json_data.state != 200) {
                                    return;
                                }
                                var strategies = json_data.strategies;
                                var options = "<option value='5LiN5ZCv55So6K+t6Z+z'>不启用语音</option>";
                                $("#strategy_list_tb tr:gt(0)").remove();
                                for (var i = 0; i < strategies.length; i++) {
                                    var trs = "";
                                    options += "<option value='" + strategies[i].strategy_name + "'>" + Base64.decode(strategies[i].strategy_name, true) + "</option>";

                                    trs += "<tr name='" + strategies[i].strategy_name + "' data='" + JSON.stringify(strategies[i]) + "'><td><label class='rem_strategy'>删除</label></td><td><input class='strategy_name text' style='width:90px;' type='text' value='" + Base64.decode(strategies[i].strategy_name, true) + "'/></td><td><select class='voicetype_sel' id='select" + i + "'><option value='0'>男声</option><option value='1'>女声</option></select></td><td class='strategy_des'>";
                                    var str = "";
                                    var strategy_arr = strategies[i].strategy_cfg;
                                    for (var j = 0; j < strategy_arr.length; j++) {
                                        str += Base64.decode(strategy_arr[j].data, true);
                                        if (j != strategy_arr.length - 1) {
                                            str += "+";
                                        }
                                    }
                                    trs += str;
                                    trs += "</td><td><label class='preview'>预览</label></td></tr>";
                                    $("#strategy_list_tb").append(trs);
                                    init_selectmenu("#select"+i, 100, 150);
                                    $("#select" + i).select_val(strategies[i].voice_male);
                                    $("#select" + i).on("selectmenuchange", function (event, ui) {
                                        replace_cur_strategy();
                                    });
                                }
                                $(".strategy_sel").html(options);
                                init_selectmenu(".strategy_sel", 130, 150);
                            },
                            dataType: "text",
                            async:false
                        });
                    }
                    //修改策略配置
                    function replace_cur_strategy_cfg() {
                        var trs = $("#strategy_cfg_tb .data_tr");
                        var arr = [];
                        for (var i = 0; i < trs.length; i++) {
                            var json = {};
                            json.index = i + 1;
                            var type = $(trs[i]).find("select").select_val();
                            type = parseInt(type);
                            json.type = type;
                            var val = $(trs[i]).find(".voive_name").val();
                            json.data = Base64.encode(val, true);
                            arr.push(json);
                        }
                        var cur_tr = $("#strategy_list_tb tr[name='" + g_strategy_name + "']");
                        if(cur_tr){
                            var data = cur_tr.attr("data");
                            var jsondata = eval("(" + data + ")");
                            jsondata.strategy_cfg = arr;
                            var jsonstr = JSON.stringify(jsondata);
                            cur_tr.attr("data",jsonstr);
                        }
                    }
                    //修改策略描述
                    function replace_cur_strategy_des() {
                        var trs = $("#strategy_cfg_tb .data_tr");
                        var str = "";
                        for (var i = 0; i < trs.length; i++) {
                            str += $(trs[i]).find(".voive_name").val();
                            if (i != trs.length - 1) {
                                str += "+";
                            }
                        }
                        var cur_tr = $("#strategy_list_tb tr[name='" + g_strategy_name + "']");
                        if (cur_tr) {
                            var strategy_des = cur_tr.find(".strategy_des");
                            strategy_des.html(str);
                        }
                    }
                    //修改策略
                    function replace_cur_strategy() {
                        var cur_tr = $("#strategy_list_tb tr[name='" + g_strategy_name + "']");
                        if (cur_tr) {
                            var voicetype = cur_tr.find("select").select_val();
                            voicetype = parseInt(voicetype);
                            var name = cur_tr.find(".strategy_name").val();

                            var data = cur_tr.attr("data");
                            var jsondata = eval("(" + data + ")");
                            jsondata.strategy_name = Base64.encode(name, true);
                            jsondata.voice_male = voicetype;
                            var jsonstr = JSON.stringify(jsondata);
                            cur_tr.attr("data", jsonstr);
                        }
                    }

                    //修改、添加语音策略
                    function replace_voice_strategy_cfg() {
                        var flag = false;
                        var str = "";
                        var cfg = {};
                        cfg.type = "set_voice_strategy_cfg";
                        var trs = $("#strategy_list_tb tr:gt(0)");
                        var arr = [];
                        for (var i = 0; i < trs.length; i++) {
                            var jsonstr = $(trs[i]).attr("data");
                            var json = eval("(" + jsonstr + ")");
                            if (json.strategy_name == "") {
                                flag = true;
                            }
                            var strategy_cfg = json.strategy_cfg;
                            for (var j = 0; j < strategy_cfg.length; j++) {
                                if (strategy_cfg[j].data == "") {
                                    if (str != "") {
                                        str += ",";
                                    }
                                    str += Base64.decode(json.strategy_name,true);
                                    break;
                                }
                            }
                            arr.push(json);
                        }
                        if (flag) {
                            alert("策略名不能为空");
                            return；
                        }
                        if (str != "") {
                            alert(str + "语音内容不能为空");
                            return;
                        }
                        cfg.strategies = arr;

                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state == 200) {
                                show_informer();
                                get_voice_strategy_cfg();
                                get_offline_voice_cfg();
                            }
                        });
                    }
                    //删除语音策略
                    function delete_voice_strategy_cfg(name) {
                        var cfg = {};
                        cfg.type = "delete_voice_strategy_cfg";
                        var arr = [];
                        var json = {};
                        json.name = name;
                        arr.push(json);
                        cfg.strategies = arr;

                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state == 200) {
                                show_informer();
                            }
                        });
                    }
                    //显示对应策略
                    function show_strategy(obj) {
                        var data = obj.attr("data");
                        if (data == "") {
                            return;
                        }
                        data = eval("(" + data + ")");
                        var strategy_arr = data.strategy_cfg;
                        $("#strategy_cfg_tb tr:gt(0)").remove();
                        for (var i = 0; i < strategy_arr.length; i++) {
                            var tr = "<tr class='data_tr'><td><label class='rem_strategy_cfg'>删除</label></td><td><select class='filetype' id='filetype_sel" + i + "'><option value='0'>自定义</option><option value='1'>车牌</option><option value='2'>时间</option><option value='3'>日期</option></select></td><td><input type='text' class='text voive_name' style='width:90px;' value='" + Base64.decode(strategy_arr[i].data, true) + "'/></td></tr>";
                            $("#strategy_cfg_tb").append(tr);
                            init_selectmenu("#filetype_sel" + i, 100, 150);
                            $("#filetype_sel" + i).select_val(strategy_arr[i].type);
                            if (strategy_arr[i].type != 0) {
                                $("#filetype_sel" + i).parent().parent().find(".voive_name").attr("disabled","disabled");
                            }
                        }
                        $("#strategy_cfg_tb").css("visibility", "visible");
                    }

                    var g_cfg_table_cur_index = -1;
                    //添加选中效果
                    function select_comm_cfg_table_item(index, cl) {
                        if (index < 0) return false;
                        index += 1;

                        var tr_item = $("#strategy_list_tb tr");
                        if (tr_item.eq(index).length == 0) return false;
                        if (g_cfg_table_cur_index != -1 && g_cfg_table_cur_index < tr_item.length) {
                            tr_item.eq(g_cfg_table_cur_index).removeClass("ui-state-active");
                        }
                        tr_item.eq(index).addClass("ui-state-active");
                        g_cfg_table_cur_index = index;
                    }
                    //清空当前选择
                    function empty_select() {
                        var tr_item = $("#strategy_list_tb tr");
                        tr_item.removeClass("ui-state-active");
                        g_cfg_table_cur_index = -1;
                        g_strategy_name = "default";
                    }
                    
                    function empty_strategy_cfg() {
                        $("#strategy_cfg_tb tr:gt(0)").remove();
                        $("#strategy_cfg_tb").css("visibility", "hidden");
                    }
                    //创建输入框
                    function create_input(obj,type) {
                        var val = obj.html();
                        var input = "<input type='text' value='"+ val +"' class='edid_txt text' style='width:90px;'/>";
                        obj.html(input);
                        $(".edid_txt").focus();
                        $(".edid_txt").dblclick(function () {
                            return false;
                        });
                        $(".edid_txt").blur(function () {
                            var txt_val = $(this).val();
                            obj.html(txt_val);
                            if (type == 0) {
                                var base64_name = Base64.encode(txt_val, true);
                                obj.parent().attr("name", base64_name);
                                g_strategy_name = base64_name;
                                replace_cur_strategy();
                            } else {
                                replace_cur_strategy_cfg();
                                replace_cur_strategy_des();
                            }
                        });
                    }
                    //插入策略
                    function insert_strategy_td() {
                        var name = get_random_name("策略");
                        var base64name = Base64.encode(name,true);
                        var index = $("#strategy_list_tb tr").length;
                        var tr = "<tr name='" + base64name + "' data='{\"strategy_name\":\"" + base64name + "\",\"voice_male\":0,\"strategy_cfg\":[]}'><td><label class='rem_strategy'>删除</label></td><td><input style='width:90px;' class='strategy_name text' type='text' value='" + name + "'/></td><td><select class='voicetype_sel' id='select" + index + "'><option value='0'>男声</option><option value='1'>女声</option></select></td><td class='strategy_des'></td><td><label class='preview'>预览</label></td></tr>";

                        $("#strategy_list_tb").append(tr);
                        init_selectmenu(".voicetype_sel", 100, 150);
                    }
                    //插入策略配置
                    function insert_strategy_cfg_td() {
                        if (g_strategy_name == "default") {
                            alert("请先选择一种策略");
                            return;
                        }
                        if (g_strategy_name == "") {
                            alert("请先修改策略名称");
                            return;
                        }
                        var tr = "<tr class='data_tr'><td><label class='rem_strategy_cfg'>删除</label></td><td><select class='filetype'><option value='0'>自定义</option><option value='1'>车牌</option><option value='2'>时间</option><option value='3'>日期</option></select></td><td><input type='text' class='voive_name text' style='width:90px;'/></td></tr>";
                        $("#strategy_cfg_tb").append(tr);
                        init_selectmenu(".filetype", 100, 150);
                        replace_cur_strategy_cfg();
                        replace_cur_strategy_des();
                    }
                    //检查策略是否重名
                    function check_rename(name,obj) {
                        var flag = false;
                        $(".strategy_name").each(function () {
                            if (obj) {
                                var old_name = obj.parent().parent().attr("name");
                                var cur_name = $(this).parent().parent().attr("name");
                                if (old_name == cur_name) {
                                    return;
                                }
                            }
                            if($(this).val() == name){
                                flag = true;
                            }
                        });
                        return flag;
                    }

                    //获得随机名称
                    function get_random_name(name) {
                        var num = parseInt(Math.random()*100);
                        var str = name + num;
                        var flag = check_rename(str);
                        if (flag) {
                            get_random_name(name);
                        } else {
                            return str;
                        }
                    }

                    function preview_strategy(obj) {
                        var datastr = obj.attr("data");
                        var voicetype = obj.find("select").select_val();
                        if (datastr == "") {
                            return;
                        }
                        var json = eval("(" + datastr + ")");
                        var strategy_cfg = json.strategy_cfg;
                        var str = "";
                        for (var i = 0; i < strategy_cfg.length; i++) {
                            if (strategy_cfg[i].type == 0) {
                                str += Base64.decode(strategy_cfg[i].data,true);
                            } else if (strategy_cfg[i].type == 1) {
                                str += "川A678CF";
                            } else if (strategy_cfg[i].type == 2) {
                                str += "8点08分";
                            } else if (strategy_cfg[i].type == 3) {
                                str += "2016年8月8日";
                            }
                        }
                        if (str == "") {
                            return;
                        }
                        var cfg = {};
                        cfg.type = "ps_voice_play";
                        cfg.voice = Base64.encode(str, true);
                        cfg.voice_interval = 100;
                        cfg.voice_volume = 100;
                        cfg.voice_male = parseInt(voicetype);

                        $.ajax({
                            type: "POST",
                            url: "../getvoiceinfo.php",
                            data: JSON.stringify(cfg),
                            success: function (ajaxdata) {
                                if (precheck(ajaxdata)) {
                                    return false;
                                }
                                if (ajaxdata.substr(0, 2) == "OK") {
                                    show_informer();
                                }
                                
                            },
                            dataType: "text"
                        });
                    }
                    //检查策略是否使用
                    function check_used(name) {
                        var flag = false;
                        for (var i in input_data) {
                            if (input_data[i] == name) {
                                flag = true;
                                break;
                            }
                        }
                        for (var i in output_data) {
                            if (output_data[i] == name) {
                                flag = true;
                                break;
                            }
                        }
                        return flag;
                    }

                    function strategy_name_change() {
                        var txt_val = $(this).val();
                        var old_val = $(this).parent().parent().attr("name");
                        var flag = check_used(old_val);
                        if (flag) {
                            alert("该策略正在使用，请先修改规则配置");
                            $(this).val(Base64.decode(old_val, true));
                            return;
                        }
                        if (check_rename(txt_val, $(this))) {
                            alert("不能和其他策略重名");
                            $(this).val(Base64.decode(old_val, true));
                            return;
                        }
                        var base64_name = Base64.encode(txt_val, true);
                        $(this).parent().parent().attr("name", base64_name);
                        g_strategy_name = base64_name;
                        replace_cur_strategy();
                    }

                    function filetype_change() {
                        var val = $(this).select_val();
                        var input = $(this).parent().parent().find(".voive_name");
                        input.removeAttr("disabled");
                        if (val == 1) {
                            input.val("[车牌]");
                        } else if (val == 2) {
                            input.val("[时间]");
                        } else if (val == 3) {
                            input.val("[日期]");
                        }
                        if (val != 0) {
                            input.attr("disabled", "disabled");
                        } else {
                            input.val("");
                        }
                        replace_cur_strategy_cfg();
                        replace_cur_strategy_des();
                    }

                    function rem_strategy() {
                        var name = $(this).parent().parent().attr("name");
                        var flag = check_used(name);
                        if (flag) {
                            alert("该策略正在使用，请先修改规则配置");
                            return false;
                        }

                        $(this).parent().parent().remove();
                        empty_select();
                        empty_strategy_cfg();
                        return false;
                    }

                    var g_strategy_name = "default";
                    this.init = function () {
                        $("#voice_rule_submit").click(set_offline_voice_cfg);
                        $("#voice_strategy_submit").click(function(){
                            empty_select();
                            empty_strategy_cfg();
                            replace_voice_strategy_cfg();
                        });
                        $("#strategy_list_tb td").live("click",function () {
                            select_comm_cfg_table_item($(this).parent().index() - 1, true);
                            if ($(this).parent().index() != 0) {
                                show_strategy($(this).parent());
                                g_strategy_name = $(this).parent().attr("name");
                            }
                        });
                        $(".strategy_name").live("change", strategy_name_change);
                        $(".voive_name").live("change", function () {
                            replace_cur_strategy_cfg();
                            replace_cur_strategy_des();
                        });

                        $(".filetype").live("selectmenuchange", filetype_change);

                        $(".voicetype_sel").live("selectmenuchange", function () {
                            replace_cur_strategy();
                        });
                        $(".rem_strategy").live("click", rem_strategy);
                        $(".rem_strategy_cfg").live("click",function () {
                            $(this).parent().parent().remove();
                            replace_cur_strategy_cfg();
                            replace_cur_strategy_des();
                        });
                        $("#insert_strategy").click(insert_strategy_td);
                        $("#insert_strategy_cfg").click(insert_strategy_cfg_td);
                        $("table label").live("hover", function () {
                            $(this).css("cursor", "pointer");
                        });
                        $(".preview").live("click", function () {
                            preview_strategy($(this).parent().parent());
                            return false;
                        });
                        get_voice_strategy_cfg();
                        get_offline_voice_cfg();
                    }
                }

                var voicerulecfg = new function () {
                    function init_slider(name) {
                        var slider_name = "#" + name + "_slider";
                        var text_name = "#" + name + "_text";
                        $(slider_name).slider({
                            range: "min",
                            value: 0,
                            min: 0,
                            max: 100,
                            change: function (event, ui) {
                                $(text_name).html(ui.value);
                            },
                            slide: function (event, ui) {
                                $(text_name).html(ui.value);
                            }
                        });
                        $(text_name).html($(slider_name).slider("value"));
                    }
                    var fast = 0;
                    var normal = 100;
                    var slow = 200;
                    //获取语音时间段配置
                    function get_voice_business_cfg() {
                        var cfg = {};
                        cfg.type = "get_voice_business_cfg";

                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state != 200) {
                                return;
                            }
                            $("#default_slider").slider('value', json_data.voice_volume);
                            var time_inv = json_data.voice_time_inv_level;
                            for (var i = 0; i < time_inv.length; i++) {
                                $("#enable" + i).check_val(time_inv[i].actived == 1);
                                $("#starttime" + i).val(time_inv[i].start_time);
                                $("#endtime" + i).val(time_inv[i].end_time);
                                $("#volume" + i + "_slider").slider('value', time_inv[i].voice_volume);
                            }
                            if (json_data.voice_interval == fast) {
                                $("#fast").check_val(true);
                            } else if (json_data.voice_interval == normal) {
                                $("#normal").check_val(true);
                            } else{
                                $("#slow").check_val(true);
                            }
                        });
                    }

                    function check_time() {
                        var flag = true;
                        var regTime = /^([0-2][0-9]):([0-5][0-9]):([0-5][0-9])$/;
                        $(".time_txt").each(function () {
                            var enable = $(this).siblings("input[type='checkbox']").check_val();
                            if (enable) {
                                var val = $(this).val();
                                if (!regTime.test(val)) {
                                    flag = false;
                                }
                            }
                        })
                        return flag;
                    }
                    //设置语音时间段
                    function set_voice_business_cfg() {
                        if (!check_time()) {
                            alert("时间格式不正确(00:00:00)");
                            return;
                        }
                        var cfg = {};
                        cfg.type = "set_voice_business_cfg";
                        cfg.voice_volume = parseInt($("#default_text").html());
                        var voice_interval = fast;
                        if ($("#fast").check_val()) {
                            voice_interval = fast;
                        } else if ($("#normal").check_val()) {
                            voice_interval = normal;
                        } else {
                            voice_interval = slow;
                        }
                        cfg.voice_interval = voice_interval;
                        var trs = $(".voice_time_inv_level");
                        var arr = [];
                        for (var i = 0; i < trs.length; i++) {
                            var json = {};
                            var start_time = $(trs[i]).find("#starttime" + i).val();
                            json.start_time = start_time;
                            var end_time = $(trs[i]).find("#endtime" + i).val();
                            json.end_time = end_time;
                            var voice_volume = $(trs[i]).find("#volume" + i + "_text").html();
                            voice_volume = parseInt(voice_volume);
                            json.voice_volume = voice_volume;
                            var actived = $(trs[i]).find("input[type='checkbox']").check_val() ? 1 : 0;
                            json.actived = actived;
                            arr.push(json);
                        }
                        cfg.voice_time_inv_level = arr;

                        voive_json_ajax(cfg, function (ajaxdata) {
                            if (precheck(ajaxdata)) {
                                return false;
                            }
                            if (ajaxdata.substr(0, 2) != "OK") {
                                return;
                            }
                            ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                            var json_data = eval("(" + ajaxdata + ")");
                            if (json_data.state == 200) {
                                show_informer();
                                get_voice_business_cfg();
                            }
                        });
                    }
                    this.init = function () {
                        init_slider("default");
                        init_slider("volume0");
                        init_slider("volume1");
                        init_slider("volume2");
                        init_slider("volume3");
                        $("#voice_business_submit").click(set_voice_business_cfg);
                        get_voice_business_cfg();
                    }
                }

                var voicematerial = new function () {
                    var cfg = {};
                    cfg.type = "ps_get_voice_info";
                    function ps_get_voice_info() {
                        $.ajax({
                            type: "POST",
                            url: "../getvoiceinfo.php",
                            data: JSON.stringify(cfg),
                            success: function (ajaxdata) {
                                if (precheck(ajaxdata)) {
                                    return false;
                                }
                                if (ajaxdata.substr(0, 2) != "OK") {
                                    return;
                                }
                                ajaxdata = ajaxdata.substring(ajaxdata.indexOf("OK") + 2);
                                var json_data = eval("(" + ajaxdata + ")");

                                var voice = json_data.voice_info;
                                var voicetype = $("#voicetype_sel").select_val();
                                var voice_arr = [];
                                if (voicetype == 0) {
                                    if (isNotUndefinedOrNull(voice.male_voice)) {
                                        voice_arr = voice.male_voice;
                                    }
                                } else {
                                    if (isNotUndefinedOrNull(voice.female_voice)) {
                                        voice_arr = voice.female_voice;
                                    }
                                }
                                var trs = "";
                                for (var i = 0; i < voice_arr.length; i++) {
                                    trs += "<tr><td>" + Base64.decode(voice_arr[i].file_name,true) + "</td></tr>";
                                }
                                $("#voice_material_tb tr:gt(0)").remove();
                                $("#voice_material_tb").append(trs);
                            },
                            dataType: "text"
                        });
                    }
                    this.init = function () {
                        $("#voicetype_sel").on("selectmenuchange", function () {
                            ps_get_voice_info();
                        });
                        ps_get_voice_info();
                    }
                }

                $(function () {
                    init_selectmenu("select", 100, 150);
                    $(".title").css({ "font-size": "14px", "font-weight": "bold" });
                    $("input[type='text']").width(100);
                    offlinevoicecfg.init();
                    voicerulecfg.init();
                    //voicematerial.init();
                });
            });
        });
    </script>

</head>
<body>
    <div id="tabs" style="min-width: 960px;overflow:hidden;">
        <ul>
            <li><a href="#tab1">策略</a></li>
            <li><a href="#tab2">音效</a></li>
            <!--<li><a href="#tab3">语音素材管理</a></li>-->
        </ul>
        <div id="tab1">
            <table class="dummy" style="font-size:12px;">
                <tr>
                    <td class="title">
                        规则配置
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="ui-widget ui-widget-content realtable" style="text-align:center;">
                            <tr class="ui-widget-header">
                                <td style="min-width:40px;"></td>
                                <!--<td style="min-width:130px;">不启用白名单</td>-->
                                <td style="min-width:157px;">白名单验证通过</td>
                                <td style="min-width:157px;">白名单验证不通过</td>
                                <td style="min-width:157px;">黑名单</td>
                                <td style="min-width:157px;">无车牌</td>
                                <td style="min-width:157px;">特殊车牌</td>
                            </tr>
                            <tr>
                                <td>入口</td>
                                <!--<td><select class="strategy_sel" vzfilter="input" datatype="disable_wl"></select></td>-->
                                <td><select class="strategy_sel" vzfilter="input" datatype="white_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="input" datatype="not_white_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="input" datatype="black_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="input" datatype="no_licence"></select></td>
                                <td><select class="strategy_sel" vzfilter="input" datatype="special_plates"></select></td>
                            </tr>
                            <tr>
                                <td>出口</td>
                                <!--<td><select class="strategy_sel" vzfilter="output" datatype="disable_wl"></select></td>-->
                                <td><select class="strategy_sel" vzfilter="output" datatype="white_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="output" datatype="not_white_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="output" datatype="black_list"></select></td>
                                <td><select class="strategy_sel" vzfilter="output" datatype="no_licence"></select></td>
                                <td><select class="strategy_sel" vzfilter="output" datatype="special_plates"></select></td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" align="right">
                        <input id="voice_rule_submit" type="submit" value="确定" />
                    </td>
                </tr>
                <tr>
                    <td class="title">
                        策略配置
                    </td>
                </tr>
                <tr>
                    <td valign="top">
                        <table class="ui-widget ui-widget-content realtable" style="text-align:center;width:555px;" id="strategy_list_tb">
                            <tr class="ui-widget-header">
                                <td style="min-width:40px;"><label id="insert_strategy">添加</label></td>
                                <td style="min-width:100px;">策略名称</td>
                                <td style="min-width:100px;">语音类型</td>
                                <td style="min-width:275px;">策略描述</td>
                                <td style="min-width:40px;">预览</td>
                            </tr>
                        </table>
                    </td>
                    <td valign="top">
                        <table class="ui-widget ui-widget-content realtable" style="text-align:center;visibility:hidden;width:240px;" id="strategy_cfg_tb">
                            <tr class="ui-widget-header">
                                <td style="min-width:40px;"><label id="insert_strategy_cfg">添加</label></td>
                                <td style="min-width:100px;">语音文件类型</td>
                                <td style="min-width:100px;">语音内容</td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" align="right">
                        <input id="voice_strategy_submit" type="submit" value="确定" />
                    </td>
                </tr>
            </table>
        </div>
        <div id="tab2">
            <table class="dummy" style="font-size:12px;">
                <tr>
                    <td class="title" colspan="4">
                        音量设置
                    </td>
                </tr>
                <tr>
                    <td style="min-width:20px"></td>
                    <td>
                        <label>默认音量</label>
                    </td>
                    <td>
                        <div id="default_slider" class="slider" style="width:200px;"></div>
                    </td>
                    <td id="default_text" style="min-width:10px" align="left"></td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="2">
                        <label>时间段音量</label>
                    </td>
                </tr>
                <tr class="voice_time_inv_level">
                    <td></td>
                    <td><input type="checkbox" id="enable0" /><input type="text" id="starttime0" class="time_txt" /><label> ~ </label><input type="text" id="endtime0" class="time_txt" /></td>
                    <td>
                        <div id="volume0_slider" class="slider" style="width:200px;"></div>
                    </td>
                    <td id="volume0_text" style="min-width:10px" align="left"></td>
                </tr>
                <tr class="voice_time_inv_level">
                    <td></td>
                    <td><input type="checkbox" id="enable1" /><input type="text" id="starttime1" class="time_txt" /><label> ~ </label><input type="text" id="endtime1" class="time_txt" /></td>
                    <td>
                        <div id="volume1_slider" class="slider" style="width:200px;"></div>
                    </td>
                    <td id="volume1_text" style="min-width:10px" align="left"></td>
                </tr>
                <tr class="voice_time_inv_level">
                    <td></td>
                    <td><input type="checkbox" id="enable2" /><input type="text" id="starttime2" class="time_txt" /><label> ~ </label><input type="text" id="endtime2" class="time_txt" /></td>
                    <td>
                        <div id="volume2_slider" class="slider" style="width:200px;"></div>
                    </td>
                    <td id="volume2_text" style="min-width:10px" align="left"></td>
                </tr>
                <tr class="voice_time_inv_level">
                    <td></td>
                    <td><input type="checkbox" id="enable3" /><input type="text" id="starttime3" class="time_txt" /><label> ~ </label><input type="text" id="endtime3" class="time_txt" /></td>
                    <td>
                        <div id="volume3_slider" class="slider" style="width:200px;"></div>
                    </td>
                    <td id="volume3_text" style="min-width:10px" align="left"></td>
                </tr>
                <tr>
                    <td class="title" colspan="4">
                        语速设置
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="3">
                        <input type="radio" name="speed" id="slow" /><label for="slow">缓慢语速</label>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="3">
                        <input type="radio" name="speed" id="normal" /><label for="normal">正常语速</label>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="3">
                        <input type="radio" name="speed" id="fast" /><label for="fast">快速语速</label>
                    </td>
                </tr>
                <tr><td>&nbsp;</td></tr>
                <tr>
                    <td colspan="3" align="right">
                        <input type="submit" id="voice_business_submit" value="确定" />
                    </td>
                </tr>
            </table>
        </div>
        <!--<div id="tab3">
            <table class="dummy" style="font-size:12px;">
                <tr>
                    <td class="title">
                        语音文件管理
                    </td>
                </tr>
                <tr>
                    <td>
                        <select id="voicetype_sel">
                            <option value="0">男声</option>
                            <option value="1">女声</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table class="ui-widget ui-widget-content realtable" id="voice_material_tb" style="text-align:center;">
                            <tr class="ui-widget-header">
                                <td style="min-width:300px;">语音文件名称</td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </div>-->
    </div>
</body>
</html>
